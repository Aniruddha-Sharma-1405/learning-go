package main

import (
	"fmt"
	"learning-go-microservice/config"
	"log"
	"net/http"
	"os"

	restapi "learning-go-microservice/controllers/target/restapi"
	operations "learning-go-microservice/controllers/target/restapi/operations"

	"github.com/gin-gonic/gin"
)

func main() {
	router := gin.Default()

	api := operations.NewUsersAPIAPI()
	handler := http.Handler

	// Assign handlers generated by swagger to your implementation
	operations.GetUsersHandler = handler
	api.UserGetUserHandler = handler
	api.UserDeleteUserHandler = handler
	api.UserCreateUserHandler = handler

	// Register swagger routes onto gin with basePath /v1
	restapi.RegisterHandlers(router, api) // If this function exists in your generated code

	_, err := os.Getwd()
	if err != nil {
		panic(err)
	}
	conf, err := config.LoadConfig()
	// server := conf.server
	if err != nil {
		log.Fatalf("Failed to load config: %v", err)
	}

	fmt.Println("Port: " + conf.Server.Port)

	router.Run(":" + conf.Server.Port)
}
